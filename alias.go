package graphapite

import "fmt"

// An Alias is a SeriesFn that will change the name of the Series that it generates
// by further calling the resolver on the target string
type Alias struct {
	Resolver Resolver
}

// Execute performs `alias([]Series, name)` where the the Series is generated by
// passing the first rawtarget arg to Resolver.Resolve()
func (a Alias) Execute(args []string) (out []Series, err error) {
	if len(args) != 2 {
		err = fmt.Errorf("alias: expected 2 arguments but got %d", len(args))
		return
	}
	in, err := a.Resolver.Resolve(args[0])
	if err != nil {
		return
	}
	for _, series := range in {
		out = append(out, Series{
			Name:       args[1],
			Datapoints: series.Datapoints,
		})
	}
	return
}
